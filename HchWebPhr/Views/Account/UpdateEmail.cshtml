@using HchWebPhr.Models.FormModels

@model UpdateEmailModel

@{
    Layout = "~/Views/Shared/_SideNavLayout.cshtml";
    ViewBag.Title = "更新電子郵件";
}
<h3 class="page-header">@ViewBag.Title</h3>
<div class="row">
    <div class="col-xxxs-push-0 col-xxxs-12 col-xs-push-1 col-xs-10 col-sm-push-3 col-sm-6">
        <p class="lead"><span class="fa fa-caret-down"></span> 請輸入以下資訊：</p>
        <div class="row">
            <div class="col-xxxs-12">
                @using (Html.BeginForm("UpdateEmail",
                                       "Account",
                                       null,
                                       FormMethod.Post,
                                       new { @role = "form", @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.LabelFor(x => x.OriginalEmail,
                                        new { @class = "col-xxxs-12 col-sm-5 col-md-4 control-label" })
                        @if (ViewData.ModelState["OriginalEmail"] != null && ViewData.ModelState["OriginalEmail"].Errors.Count > 0)
                        {
                            <div class="col-xxxs-12 col-sm-7 col-md-8 has-error has-feedback">
                                @Html.TextBoxFor(x => x.OriginalEmail,
                                                new { @id = Html.IdFor(x => x.OriginalEmail), @class = "form-control" })
                                <span class="glyphicon glyphicon-remove form-control-feedback" aria-hidden="true"></span>
                                <span id="inputError2Status" class="sr-only">(error)</span>
                                @Html.ValidationMessageFor(x => x.OriginalEmail, null, new { @class = "control-label" })
                            </div>
                        }
                        else
                        {
                            <div class="col-xxxs-12 col-sm-7 col-md-8">
                                @Html.TextBoxFor(x => x.OriginalEmail,
                                                new { @id = Html.IdFor(x => x.OriginalEmail), @class = "form-control" })
                                @*<input type="text" class="form-control" />*@
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.NewEmail,
                                           new { @class = "col-xxxs-12 col-sm-5 col-md-4 control-label" })
                        @if (ViewData.ModelState["NewEmail"] != null && ViewData.ModelState["NewEmail"].Errors.Count > 0)
                        {
                            <div class="col-xxxs-12 col-sm-7 col-md-8 has-error has-feedback">
                                @Html.TextBoxFor(x => x.NewEmail,
                                                 new { @id = Html.IdFor(x => x.NewEmail), @class = "form-control" })
                                <span class="glyphicon glyphicon-remove form-control-feedback" aria-hidden="true"></span>
                                <span id="inputError2Status" class="sr-only">(error)</span>
                                @Html.ValidationMessageFor(x => x.NewEmail, null, new { @class = "control-label" })
                            </div>
                        }
                        else
                        {
                            <div class="col-xxxs-12 col-sm-7 col-md-8">
                                @Html.TextBoxFor(x => x.NewEmail,
                                                 new { @id = Html.IdFor(x => x.NewEmail), @class = "form-control" })
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.ConfirmNewEmail,
                                           new { @class = "col-xxxs-12 col-sm-5 col-md-4 control-label" })
                        @if (ViewData.ModelState["ConfirmNewEmail"] != null && ViewData.ModelState["ConfirmNewEmail"].Errors.Count > 0)
                        {
                            <div class="col-xxxs-12 col-sm-7 col-md-8 has-error has-feedback">
                                @Html.TextBoxFor(x => x.ConfirmNewEmail,
                                                 new { @id = Html.IdFor(x => x.ConfirmNewEmail), @class = "form-control" })
                                <span class="glyphicon glyphicon-remove form-control-feedback" aria-hidden="true"></span>
                                <span id="inputError2Status" class="sr-only">(error)</span>
                                @Html.ValidationMessageFor(x => x.ConfirmNewEmail, null, new { @class = "control-label" })
                            </div>
                        }
                        else
                        {
                            <div class="col-xxxs-12 col-sm-7 col-md-8">
                                @Html.TextBoxFor(x => x.ConfirmNewEmail,
                                                 new { @id = Html.IdFor(x => x.ConfirmNewEmail), @class = "form-control" })
                            </div>
                        }
                    </div>
                    if (ViewBag.ErrorCode != null)
                    {
                        <div class="form-group">
                            <div class="col-xxxs-12 col-md-4"></div>
                            <div class="col-xxxs-12 col-md-8">
                                <div class="alert alert-danger">
                                    <strong>錯誤:</strong>
                                    @(ViewBag.ErrorCode + " - " + ViewBag.ErrorMessage)
                                </div>
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <div class="col-xxxs-12 col-md-4"></div>
                        <div class="col-xxxs-12 col-md-8" style="padding: 0px;">
                            <div class="col-xxxs-6">
                                @Html.ActionLink("重來",
                                                 "UpdateEmail",
                                                 "Account",
                                                 null,
                                                 new { @class = "btn btn-default btn-block" })
                            </div>
                            <div class="col-xxxs-6">
                                <button type="submit" class="btn btn-primary btn-block">更新電子郵件</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(function () {
            @foreach(KeyValuePair<String, ModelState> field in ViewData.ModelState)
            {
                var field_id = field.Key;
                var field_obj = field.Value;
                var field_err = "";
                foreach (ModelError Err in field_obj.Errors)
                {
                    field_err = field_err + Err.ErrorMessage + "\\n";
                }
                <text>
                    $("#@field_id").popover({
                        animation: true,
                        content: '@field_err',
                        placement: 'top',
                        trigger: 'hover',
                        container: 'body'
                    });
                </text>
            }
        });
    </script>
}